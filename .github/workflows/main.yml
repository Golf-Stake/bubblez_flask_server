name: Build & Deploy PROD Server

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.ECR_AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_CONTAINER_IMAGE: ${{ secrets.ECR_REGISTRY }}:latest
        run: |
          docker build -t $ECR_CONTAINER_IMAGE .
          docker push $ECR_CONTAINER_IMAGE
          docker rmi $ECR_CONTAINER_IMAGE

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deployment
        uses: appleboy/ssh-action@master
        env:
          ECR_AWS_REGION: '${{ secrets.ECR_AWS_REGION }}'
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          FOO: 'BAR'
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: 'ubuntu'
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          port: '22'
          envs: ECR_AWS_REGION,ECR_REGISTRY,FOO
          script: |
            echo "Inside Server"
            cd /home/ubuntu
            aws ecr get-login-password --region $ECR_AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
            echo "Login completed..."
            cd /home/ubuntu/bubblez-prod/flask-server
            ./deploy-script.sh
